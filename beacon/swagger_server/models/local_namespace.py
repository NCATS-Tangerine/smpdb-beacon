# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.namespace import Namespace  # noqa: F401,E501
from swagger_server import util


class LocalNamespace(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, local_prefix: str=None, uri: str=None, clique_mappings: Namespace=None, frequency: int=None):  # noqa: E501
        """LocalNamespace - a model defined in Swagger

        :param local_prefix: The local_prefix of this LocalNamespace.  # noqa: E501
        :type local_prefix: str
        :param uri: The uri of this LocalNamespace.  # noqa: E501
        :type uri: str
        :param clique_mappings: The clique_mappings of this LocalNamespace.  # noqa: E501
        :type clique_mappings: Namespace
        :param frequency: The frequency of this LocalNamespace.  # noqa: E501
        :type frequency: int
        """
        self.swagger_types = {
            'local_prefix': str,
            'uri': str,
            'clique_mappings': Namespace,
            'frequency': int
        }

        self.attribute_map = {
            'local_prefix': 'local_prefix',
            'uri': 'uri',
            'clique_mappings': 'clique_mappings',
            'frequency': 'frequency'
        }

        self._local_prefix = local_prefix
        self._uri = uri
        self._clique_mappings = clique_mappings
        self._frequency = frequency

    @classmethod
    def from_dict(cls, dikt) -> 'LocalNamespace':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LocalNamespace of this LocalNamespace.  # noqa: E501
        :rtype: LocalNamespace
        """
        return util.deserialize_model(dikt, cls)

    @property
    def local_prefix(self) -> str:
        """Gets the local_prefix of this LocalNamespace.

        a CURIE prefix that is used to identify records by this beacon  # noqa: E501

        :return: The local_prefix of this LocalNamespace.
        :rtype: str
        """
        return self._local_prefix

    @local_prefix.setter
    def local_prefix(self, local_prefix: str):
        """Sets the local_prefix of this LocalNamespace.

        a CURIE prefix that is used to identify records by this beacon  # noqa: E501

        :param local_prefix: The local_prefix of this LocalNamespace.
        :type local_prefix: str
        """

        self._local_prefix = local_prefix

    @property
    def uri(self) -> str:
        """Gets the uri of this LocalNamespace.

        The expansion of the CURIE prefix  # noqa: E501

        :return: The uri of this LocalNamespace.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri: str):
        """Sets the uri of this LocalNamespace.

        The expansion of the CURIE prefix  # noqa: E501

        :param uri: The uri of this LocalNamespace.
        :type uri: str
        """

        self._uri = uri

    @property
    def clique_mappings(self) -> Namespace:
        """Gets the clique_mappings of this LocalNamespace.


        :return: The clique_mappings of this LocalNamespace.
        :rtype: Namespace
        """
        return self._clique_mappings

    @clique_mappings.setter
    def clique_mappings(self, clique_mappings: Namespace):
        """Sets the clique_mappings of this LocalNamespace.


        :param clique_mappings: The clique_mappings of this LocalNamespace.
        :type clique_mappings: Namespace
        """

        self._clique_mappings = clique_mappings

    @property
    def frequency(self) -> int:
        """Gets the frequency of this LocalNamespace.

        The number of concepts with CURIE identifiers in this namespace  # noqa: E501

        :return: The frequency of this LocalNamespace.
        :rtype: int
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency: int):
        """Sets the frequency of this LocalNamespace.

        The number of concepts with CURIE identifiers in this namespace  # noqa: E501

        :param frequency: The frequency of this LocalNamespace.
        :type frequency: int
        """

        self._frequency = frequency
